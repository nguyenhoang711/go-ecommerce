{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server celler server.",
        "title": "Swagger GO Ecommerce API",
        "termsOfService": "github.com/devpenguin/ecommerce",
        "contact": {
            "name": "Tips Go",
            "url": "github.com/devpenguin/ecommerce",
            "email": "hoangnguyendang777@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "localhost:8002",
    "paths": {
        "/auth/update_pass_register": {
            "post": {
                "description": "When user verify OTP success and update password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth user management"
                ],
                "summary": "auth user update password",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vo.UpdatePasswordRegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseData"
                        }
                    }
                }
            }
        },
        "/auth/verify_account": {
            "post": {
                "description": "When user is registered send otp to email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth user management"
                ],
                "summary": "auth user verify otp",
                "parameters": [
                    {
                        "description": "payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vo.VerifyInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ResponseData"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponseData"
                        }
                    }
                }
            }
        },
        "/syst/system-info": {
            "post": {
                "description": "Lấy về thông tin cơ bản của server , như giờ hệ thống , tên server , version hiện tại của hệ thống",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "INFO"
                ],
                "summary": "cms Server info",
                "parameters": [
                    {
                        "description": "info",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/vo.CMSPing_Request"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/vo.CMSPing_Reply"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "response.ErrorResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "status code",
                    "type": "integer"
                },
                "detail": {
                    "description": "du lai return"
                },
                "error": {
                    "description": "thong bao loi",
                    "type": "string"
                }
            }
        },
        "response.ResponseData": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "status code",
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "vo.CMSPing_Reply": {
            "type": "object",
            "properties": {
                "mode": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "vo.CMSPing_Request": {
            "type": "object",
            "properties": {
                "hello": {
                    "description": "@gotags: form:\"hello\"",
                    "type": "string"
                }
            }
        },
        "vo.UpdatePasswordRegisterInput": {
            "type": "object",
            "properties": {
                "user_password": {
                    "type": "string"
                },
                "user_token": {
                    "type": "string"
                }
            }
        },
        "vo.VerifyInput": {
            "type": "object",
            "properties": {
                "verify_code": {
                    "type": "string"
                },
                "verify_key": {
                    "type": "string"
                }
            }
        }
    }
}